# Splunk event intake uses basic authentication

init_config:
  # time before a HTTP request times out
  default_request_timeout_seconds: 10

  # a search on a saved search does not immediately return results, one has to retry until data is received,
  # search_max_retry_count specifies the number of retries in which it expects results to be available.
  # Between each retry some time is waited before retrying, specified by search_seconds_between_retries.
  default_search_max_retry_count: 5
  default_search_seconds_between_retries: 1

  default_verify_ssl_certificate: false

  # The number of saved searches to dispatch and await for results simultaneously.
  default_saved_searches_parallel: 3

  # How many results should we request per request to splunk
  default_batch_size: 1000

  # The amount of time (in seconds) to go in the past for an initial query when the agent starts up.
  # Warning: can cause events to be reported twice if the agent is start/stopped
  default_initial_history_time_seconds: 0

  # Maximum amount of history recovered after a restart (1 day)
  default_max_restart_history_seconds: 86400

  # Maximum size of chunks when querying historical data from splunk
  default_max_query_chunk_seconds: 300

  # Delay before starting polling events after starting
  # default_initial_delay_seconds: 600

  # Fields to uniquely identify a record. Use unique_key_fields: None to use the whole record.
  # default_unique_key_fields:
  #   - "_bkt"
  #   - "_cd"

  # the Splunk app in where the saved searches are located
  # default_app: "search"

  # default parameters for the Splunk saved search query, these parameters make sure the query refreshes.
  default_parameters:
    force_dispatch: true
    dispatch.now: true

# Currently it is not possible to specify multiple instances with the same url.
# It is possible to specify multiple saved_searches on a single instance.
instances:
  - url: "https://localhost:8089"

    # username: "admin" # deprecated
    # password: "admin" # deprecated

    # verify_ssl_certificate: false

    ## new authentication structure either token or basic auth will be used.
    authentication:
      basic_auth:
        username: "admin"
        password: "admin"
      # token_auth:
        ## Token for the user who will be using it
        # name: "api-user"

        ## it's first initial valid token which will be exchanged with new generated token as soon as the check starts
        ## first time and in case of restart, this token will not be used anymore
        # initial_token: "my-initial-token-hash"

        ## JWT audience used for purpose of token
        # audience: "search"

        ## token_expiration_days also works only in token based authentication and this value used to set expiry days for
        ## create a new token after first initial token is provided. By default the value is 90 days. The token is renewed
        ## 1 day before the expiry right now.
        # token_expiration_days: 90

        ## the number of days before when token should refresh, by default it's 10 days
        # renewal_days: 10

    # saved_searches_parallel: 3
    # initial_delay_seconds: 600 // 10 minutes
    saved_searches:
      # Splunk name of the saved search
      - name: "events"
        # Wilcard match to find event queries, can be used instead of name
        # match: "events.*"
        # app: "search"
        # request_timeout_seconds: 10
        # search_max_retry_count: 5
        # search_seconds_between_retries: 1
        # batch_size: 1000
        # initial_history_time_seconds: 0
        # max_restart_history_seconds: 86400
        # max_query_chunk_seconds: 3600
        # unique_key_fields:
        #   - "_bkt"
        #   - "_cd"
        # parameters:
        #   force_dispatch: true
        #   dispatch.now: true

    # tags:
    #      - optional_tag1
    #      - optional_tag2