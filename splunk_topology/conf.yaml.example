# Splunk topology intake uses basic authentication

init_config:
  # time before a HTTP request times out
  default_request_timeout_seconds: 10

  # a search on a saved search does not immediately return results, one has to retry until data is received,
  # search_max_retry_count specifies the number of retries in which it expects results to be available.
  # Between each retry some time is waited before retrying, specified by search_seconds_between_retries.
  default_search_max_retry_count: 10
  default_search_seconds_between_retries: 1

  # The number of saved searches to dispatch and await for results simultaneously.
  default_saved_searches_parallel: 3

  # How many results should we request per request to splunk
  default_batch_size: 1000

  # Interval at which to dispatch a saved search
  default_polling_interval_seconds: 300

  # verify ssl certificate of the connection to Splunk
  default_verify_ssl_certificate: false

  # the Splunk app in where the saved searches are located
  default_app: "search"

  # default parameters for the Splunk saved search query, these parameters make sure the query refreshes.
  default_parameters:
    force_dispatch: true
    dispatch.now: true


# Currently it is not possible to specify multiple instances with the same url.
# It is possible to specify multiple saved_searches on a single instance.
instances:
  - url: "https://localhost:8089"

    # username: "admin" ## deprecated; use basic_auth.username under authentication section
    # password: "admin" ## deprecated; use basic_auth.password under authentication section

    # verify_ssl_certificate: false

    ## Integration supports either basic authentication or token based authentication.
    ## Token based authentication is preferred before basic authentication.
    authentication:
      basic_auth:
        username: "admin"
        password: "admin"
      # token_auth:
        ## Token for the user who will be using it
        # name: "api-user"

        ## The initial valid token which will be exchanged with new generated token as soon as the check starts
        ## first time and in case of restart, this token will not be used anymore
        # initial_token: "my-initial-token-hash"

        ## JWT audience used for purpose of token
        # audience: "search"

        ## When a token is about to expire, a new token is requested from Splunk. The validity of the newly requested
        ## token is requested to be `token_expiration_days` days. After `renewal_days` days the token will be renewed
        ## for another `token_expiration_days` days.
        # token_expiration_days: 90

        ## the number of days before when token should refresh, by default it's 10 days.
        # renewal_days: 10

    # Determine whether to produce topology in snapshots, defaults to true
    # snapshot: true
    # polling_interval_seconds: 300
    # saved_searches_parallel: 5

    # make the agent less strict and allow for saved searches to be failing or missing
    ignore_saved_search_errors: true

    component_saved_searches:
      - name: "components"
        # Wilcard match to find component queries, can be used instead of name
        # match: "comp.*"
        # app: "search"
        # request_timeout_seconds: 10
        # search_max_retry_count: 5
        # search_seconds_between_retries: 1
        # batch_size: 1000
        # parameters:
        #   force_dispatch: true
        #   dispatch.now: true
    relation_saved_searches:
      #- name: "relations"
      # Wilcard match to find relation queries, can be used instead of name
      #  match: "relation*"
      #  app: "search"
      #  request_timeout_seconds: 10
      #  search_max_retry_count: 5
      #  search_seconds_between_retries: 1
      #  parameters:
      #    force_dispatch: true
      #    dispatch.now: true

    # tags:
    #      - optional_tag1
    #      - optional_tag2
